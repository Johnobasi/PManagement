@using PermissionManagement.Utility
@*@model PermissionManagement.Model.AuditChangeListingResponse*@
@{
    ViewBag.Title = "Exceptions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MainContent {
    @using (Html.BeginForm("ExceptionList", "Reports", FormMethod.Post))
    {
        <div class="table-responsive page-head-line">
            <div class="col-md-9 align-text-bottom">
                <br />Exceptions List
            </div>
            <div class="col-md-3 align">
                @Html.Hidden("ExportExceptionID")
                @Html.Hidden("ExportExceptionMessage")
                @Html.Hidden("ExportExceptionfrom-date")
                @Html.Hidden("ExportExceptionfrom-to-date")
                <button class="btn btn-default pull-right tooltipBottomLeft" tooltip="Export to Excel" type="submit" name="btnExcel" onclick="return GetData();" id="btnExcel"> <span class="glyphicon glyphicon-save "></span> <span class="fa fa-file-excel-o"></span></button>
            </div>
        </div>
        <div class="col-md-12">
            <p>
                @{var status = Access.IsAccessRightInRoleProfile(Constants.Modules.AuditTrail, Constants.AccessRights.View);
                if (status)
                {
                    @Html.ActionLink("User List", "UsersList")
                }
                }
                <button type="button" class="btn btn-default btn-md search-button pull-right" id="search-button">
                    <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
                </button>
                <button type="button" class="btn btn-default btn-md refresh-button pull-right" id="refresh-button">
                    <span class="glyphicon glyphicon-refresh pull-right" aria-hidden="true"></span> Refresh
                </button>
            </p>
            <hr />
            <div class="table-responsive">
                <table id="AuditChangeListTbl" class="table table-bordered table-striped table-hover display">
                    <thead>
                        <tr>
                            <th>ExceptionId</th>
                            <th>ExceptionDate</th>
                            <th>ExceptionType</th>
                            <th>Exception Details</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <hr />
            @if (status)
            {
                @Html.ActionLink("User List", "UsersList")
            }
        </div>
           
        <div class="row">
            <div class="modal fade" id="addpane" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Exception Details</h4>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-12 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        <div id="dataDiv" style="max-height: 300px; overflow-y: auto">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
}
@section scripts {
    @*<script src="~/Scripts/DataTables/jquery.dataTables.js" type="text/javascript"></script>
        <script src="~/Scripts/bootstrap.js"></script>*@
    <script type="text/javascript">
        function ShowModal(data)
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetExcepionMessageById", "Reports")",
                data: "{ 'id':'" + data + "'}",
                contentType: "application/json; charset=utf-8",
                error: function (xhr, ajaxOptions, thrownError)
                {
                    //alert(xhr.statusText);
                    //alert(thrownError);
                },
                success: function (d)
                {
                    // alert(data);
                    $("#dataDiv").html(d);
                    $('#addpane').modal('show');
                }
            });

        }

        function GetData()
        {
            var tblSearchControls = 'yadcf-filter--AuditChangeListTbl';
            document.getElementById("ExportExceptionID").value = document.getElementById(tblSearchControls + '-0').value;
            document.getElementById("ExportExceptionMessage").value = document.getElementById(tblSearchControls + '-1').value;
            document.getElementById("ExportExceptionfrom-date").value = document.getElementById(tblSearchControls + '-from-date-2').value;
            document.getElementById("ExportExceptionfrom-to-date").value = document.getElementById(tblSearchControls + '-to-date-2').value;
            return true;
        }

        $(document).ready(function ()
        {
            var exportToExcel = 0;
            function formatDate(date1)
            {

                var date = new Date(date1);
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var secs = date.getSeconds();

                hours = hours < 10 ? '0' + hours : hours;
                minutes = minutes < 10 ? '0' + minutes : minutes;
                secs = secs < 10 ? '0' + secs : secs;
                var strTime = hours + ':' + minutes + ':' + secs;
                var monthNumber = date.getMonth() + 1;

                return date.getDate() + "/" + monthNumber + "/" + date.getFullYear() + "  " + strTime;
            };

            var itemListVm = {
                dt: null,

                init: function ()
                {
                    var purl = "@Helper.GetRootURL()" + "/Reports/ListExceptionData";
                    //$.fn.dataTable.ext.errMode = 'none';
                    dt = $('#AuditChangeListTbl')
                        .DataTable({
                            initComplete: function ()
                            {
                                var api = this.api();
                                $('#AuditChangeListTbl_filter input')
                                    .off('.DT')
                                    .on('keyup.DT',
                                        function (e)
                                        {
                                            if (e.keyCode == 13)
                                            {
                                                api.search(this.value).draw();
                                            }
                                        });
                            },
                            "filter": false,
                            "processing": true,
                            "language": {
                                "processing":
                                    "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate gi-5x'></span>"
                            },
                            "serverSide": true,
                            "ajax": { "url": purl, "type": "POST" },
                            "columns": [
                                { "title": "ExceptionId", "data": "ExceptionId" },
                                { "title": "Exception Message", "data": "ExceptionMessage" },
                                {
                                    "title": "ExceptionDate", "data": "ExceptionDateTime",
                                    "render": function (value)
                                    {
                                        if (value === null) return "";
                                        var pattern = /Date\(([^)]+)\)/; var results = pattern.exec(value);
                                        var dt = new Date(parseFloat(results[1])); return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                                    }
                                },
                                {
                                    "title": "Exception Details", "data": "ExceptionId", "render": function (data, type, full, meta)
                                    {
                                        var linkDisplay = "Exception Details"; return '<a  onclick="return ShowModal(' + data + ');" href="#">' + linkDisplay + '</a>';
                                    }
                                }
                            ],
                            "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]]
                        });
                    yadcf.init(dt,
                        [
                            {
                                column_number: 0,
                                filter_type: "text"
                            }, {
                                column_number: 1,
                                filter_type: "text"
                            },
                            {
                                column_number: 2,
                                filter_type: "range_date",
                                date_format: "dd/mm/yyyy",
                                filter_delay: 500
                            }
                        ],
                        {
                            externally_triggered: true
                        });
                },

                refresh: function ()
                {
                    dt.ajax.reload();
                },

                search: function ()
                {

                    yadcf.exFilterExternallyTriggered(dt);
                }
            }

            $('#refresh-button').on("click", itemListVm.refresh);
            $('#search-button').on("click", itemListVm.search);
            /////////////////////////////////////////////////////////////////
            // Let's kick it all off
            itemListVm.init();
        });
    </script>
}








