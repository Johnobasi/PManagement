@using PermissionManagement.Utility
@*@model PermissionManagement.Model.AuditChangeListingResponse*@
@{
    ViewBag.Title = "Exceptions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MainContent {
    <div class="col-md-12">
        <h1 class="page-head-line"> Exceptions List</h1>
        <p>
            <button type="button" class="btn btn-default btn-md search-button" id="search-button">
                <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
            </button>
            <button type="button" class="btn btn-default btn-md refresh-button" id="refresh-button">
                <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Refresh
            </button>
        </p>
        <hr />
        <div class="table-responsive">
            <table id="AuditChangeListTbl" class="table table-bordered table-striped table-hover display">
                <thead>
                <tr>
                    <th>Login User Id</th>
                    <th>User Name</th>
                    <th>Eail</th>
                    <th>Staff Position</th>
                    <th>Branch</th>
                    <th>New Users</th>
                    <th>Disabled Users</th>
                    <th>Dormant Users</th>
                    
                </tr>
                </thead>
            </table>
        </div>
        <hr />

    </div>
    }
@section scripts {

    <script> 
     $(document).ready(function () {
            function formatDate(date1) {
                var date = new Date(date1);
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var secs = date.getSeconds();

                hours = hours < 10 ? '0' + hours : hours;
                minutes = minutes < 10 ? '0' + minutes : minutes;
                secs = secs < 10 ? '0' + secs : secs;
                var strTime = hours + ':' + minutes + ':' + secs;
                var monthNumber = date.getMonth() + 1;

                return date.getDate() + "/" + monthNumber + "/" + date.getFullYear() + "  " + strTime;
            };

            var itemListVm = {
                dt: null,

                init: function () {
                    var purl = "@Helper.GetRootURL()" + "/Reports/ListExceptionData";
                    //$.fn.dataTable.ext.errMode = 'none';
                    dt = $('#AuditChangeListTbl')
                        .DataTable({
                            initComplete: function () {
                                var api = this.api();
                                $('#AuditChangeListTbl_filter input')
                                    .off('.DT')
                                    .on('keyup.DT',
                                        function (e) {
                                            if (e.keyCode == 13)
                                            {
                                                api.search(this.value).draw();
                                            }
                                        });
                            },
                            "filter": false,
                            "processing": true,
                            "language": {
                                "processing":
                                    "<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate gi-5x'></span>"
                            },
                            "serverSide": true,
                            "ajax": { "url": purl, "type": "POST" },
                            "columns": [
                                { "title": "ExceptionId", "data": "ExceptionId" },
                                {
                                    "title": "Exception Type", "data": "ExceptionType"
                                },
                                {
                                    "title": "ExceptionDate",
                                    "data": "ExceptionDateTime"
                                    ,
                                    "render": function (value) {
                                        if (value === null) return "";

                                        var pattern = /Date\(([^)]+)\)/;
                                        var results = pattern.exec(value);
                                        var dt = new Date(parseFloat(results[1]));

                                        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                                    }
                                }

                                ,
                                {
                                    "title": "Exception Details",
                                    "data": "ExceptionId",
                                    "render": function (data, type, full, meta) {
                                        var linkDisplay = "Exception Details";

                                        return '<a  onclick="return ShowModal(' + data + ');" href="#">' + linkDisplay + '</a>';
                                    }
                                }
                                //,
                                //{ "title": "Client IP Address", "data": "ClientIPAddress" }
                            ],
                            "lengthMenu": [[10, 20, 50], [10, 20, 50]]
                        });
                    yadcf.init(dt,
                        [
                            {
                                column_number: 0,
                                filter_type: "text"
                            }, {
                                column_number: 1,
                                filter_type: "text"
                            },
                            {
                                column_number: 2,
                                filter_type: "range_date",
                                date_format: "dd/mm/yyyy",
                                filter_delay: 500
                            }
                            //,
                            //{
                            //    column_number: 4,
                            //    filter_type: "text"
                            //}
                        ],
                        {
                            externally_triggered: true
                        });
                },

                refresh: function () {
                    dt.ajax.reload();
                },

                search: function () {

                    yadcf.exFilterExternallyTriggered(dt);
                }
            }

            $('#refresh-button').on("click", itemListVm.refresh);
            $('#search-button').on("click", itemListVm.search);

            /////////////////////////////////////////////////////////////////
            // Let's kick it all off
            itemListVm.init();
        });
    </script>


}








